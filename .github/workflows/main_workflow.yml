name: Build and release
on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: 16
    - run: bash .ci/install_dependencies.sh
    - name: Build
      if: ${{ github.ref == 'refs/heads/main' || github.event_name == 'pull_request' }}
      run: |
        cd packages/tdb-dashboard
        echo '
            CONNECTION_TYPE="REMOTE"
            TERMINUSDB_SERVER="https://cloud-dev.terminusdb.com/"
            FEEDBACK_URL="https://cloud-dev.terminusdb.com/"
            REACT_APP_BASE_ROUTER=""
            AUTH0_CLIENT_ID="s6iYFJzoSedUHGUUaRYCGGWXWEPHkd02"
            AUTH0_DOMAIN="signup-dev.terminusdb.com"
            AUDIENCE="https://terminuscloud/users"
        ' > .env
        npm run build
    - name: Build prod
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        cd packages/tdb-dashboard
        echo '
            CONNECTION_TYPE="REMOTE"
            TERMINUSDB_SERVER="https://cloud.terminusdb.com/"
            FEEDBACK_URL="https://cloud.terminusdb.com/"
            REACT_APP_BASE_ROUTER=""
            AUTH0_CLIENT_ID="365PsB0AmUmB2odSFwezWkX31BZv6PoH"
            AUTH0_DOMAIN="signup.terminusdb.com"
            AUDIENCE="https://terminuscloud/users"
        ' > .env
        npm run build
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ secrets.GCLOUD_PROJECT }}
        service_account_key: ${{ secrets.GCLOUD_SERVICE_ACCOUNT_KEY }}
        export_default_credentials: true
#    - name: Upload tdb-dashboard dev
#      if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/main' }}
#      run: gsutil -h "Cache-Control:public, max-age=60" cp -r packages/tdb-dashboard/dist/* "gs://${{ secrets.GCLOUD_DEV_BUCKET }}/"
#    - name: Upload tdb-dashboard prod
#      if: ${{ github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/v') }}
#      run: gsutil -h "Cache-Control:public, max-age=60" cp -r packages/tdb-dashboard/dist/* "gs://${{ secrets.GCLOUD_BUCKET }}/"
#    - name: Clean cloudflare cache
#      if: ${{ github.event_name != 'pull_request' }}
#      run: python3 .ci/clean_cloudflare_cache.py ${{ github.ref }}
#      env:
#        CLOUDFLARE_EMAIL: ${{ secrets.CLOUDFLARE_EMAIL }}
#        CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}
#        CLOUDFLARE_API_KEY: ${{ secrets.CLOUDFLARE_API_KEY }}

  build_for_local:
    name: Build local dashboard
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: 16
    - run: bash .ci/install_dependencies.sh
    - name: Build local dashboard
      if: ${{ github.ref == 'refs/heads/main' || github.event_name == 'pull_request' || startsWith(github.ref, 'refs/tags/v') }}
      run: |
        cd packages/tdb-dashboard
        echo '
            CONNECTION_TYPE="LOCAL"
            TERMINUSDB_SERVER=http://127.0.0.1:6363/
            TERMINUSDB_KEY=root
            FEEDBACK_URL="https://cloud.terminusdb.com/"
            BASE_URL="dashboard"
        ' > .env
        npm run build
        cd dist
        tar caf release.tar.gz *

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: ncipollo/release-action@v1.10.0
      with:
        artifacts: packages/tdb-dashboard/dist/release.tar.gz
